#3631
#medium

#You are given a 2D integer array threats, where each threats[i] = [IDi, sevi​, expi]

#IDi: Unique identifier of the threat.
#sevi: Indicates the severity of the threat.
#expi: Indicates the exploitability of the threat.
#The score of a threat i is defined as: score = 2 × sevi + expi

#Your task is to return threats sorted in descending order of score.

#If multiple threats have the same score, sort them by ascending ID​​​​​​​.

#my own solution using python3:

#calculate the score for each sublist, and then order it by score in descending order, and then return the sublists in that new order

class Solution:
    def sortThreats(self, threats: List[List[int]]) -> List[List[int]]:
        sl = SortedList()
        for t in threats:
            score = 2 * t[1] + t[2]
            sl.add((-score, t))
        print(sl)
        ans = []
        for s in sl:
            ans.append(s[1])
        return ans
